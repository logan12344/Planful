apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'de.timfreiheit.resourceplaceholders'

def canonicalVersionCode = 280
def canonicalVersionName = "1.3.1"

def postFixSize = 10
def abiPostFix =
        ['armeabi-v7a': 1,
         'arm64-v8a'  : 2,
         'universal'  : 5]

android {
    compileSdkVersion 33

    defaultConfig {
        versionCode canonicalVersionCode * postFixSize
        versionName canonicalVersionName
        applicationId "com.production.planful"
        minSdkVersion 23
        targetSdkVersion 33
        setProperty("archivesBaseName", "Planful")
        vectorDrawables.useSupportLibrary = true

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }

        splits {
            abi {
                enable true
                reset()
                include 'armeabi-v7a', 'arm64-v8a'
                universalApk true
            }
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }
        release {
            applicationIdSuffix = '.release'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            minifyEnabled true
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFileName = output.outputFileName.replace(".apk", "-${variant.versionName}.apk")
            def abiName = output.getFilter("ABI") ?: 'universal'
            def postFix = abiPostFix.get(abiName, 0)

            if (postFix >= postFixSize) throw new AssertionError("postFix is too large")

            output.versionCodeOverride = canonicalVersionCode * postFixSize + postFix
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    resourcePlaceholders {
        files = ['xml/shortcuts.xml']
    }
}

dependencies {
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation "androidx.print:print:1.0.0"

    kapt 'androidx.room:room-compiler:2.4.3'
    implementation 'androidx.room:room-runtime:2.4.3'
    annotationProcessor 'androidx.room:room-compiler:2.4.3'

    implementation "com.andrognito.patternlockview:patternlockview:1.0.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.7.20"
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation "androidx.documentfile:documentfile:1.0.1"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    implementation "androidx.biometric:biometric-ktx:1.2.0-alpha04"
    implementation "com.googlecode.ez-vcard:ez-vcard:0.11.3"
    implementation 'com.google.android.flexbox:flexbox:3.0.0'
    api "joda-time:joda-time:2.11.0"
    api "com.github.tibbi:RecyclerView-FastScroller:5a95285b1f"
    api "com.github.tibbi:reprint:2cb206415d"
    api "androidx.core:core-ktx:1.9.0"
    api "androidx.appcompat:appcompat:1.5.0"
    api "com.google.android.material:material:1.7.0"
    api "com.google.code.gson:gson:2.9.1"
    api "com.duolingo.open:rtl-viewpager:2.0.0"

    api "com.github.bumptech.glide:glide:4.13.2"
    kapt "com.github.bumptech.glide:compiler:4.13.2"
    annotationProcessor "com.github.bumptech.glide:compiler:4.13.2"

    api "androidx.room:room-runtime:2.4.3"
    kapt "androidx.room:room-compiler:2.4.3"
    annotationProcessor "androidx.room:room-compiler:2.4.3"
    implementation "com.squareup.retrofit2:converter-gson:2.3.0"
    implementation 'com.github.eralpyucel:CircleProgressView:v1.1'
}
